import { useState, useEffect } from "react";
import { usePathname } from "next/navigation";
import { IconProps } from "types";

export const LibrarySidebarNavIcon = ({
  color: iconColor,
  width,
  height,
  ...props
}: IconProps) => {
  const [color, setColor] = useState<string>("#8499B1");

  const href = "/library";
  const pathname = usePathname();

  useEffect(() => {
    if (pathname?.startsWith(href) && !iconColor) {
      setColor("#C0933E");
    } else if (!pathname?.startsWith(href) && !iconColor) {
      setColor("#8499B1");
    }
  }, [iconColor, pathname]);

  useEffect(() => {
    if (iconColor) {
      setColor(iconColor);
    }
  }, [iconColor, pathname]);

  return (
    <svg
      xmlns='http://www.w3.org/2000/svg'
      width={width ?? "24"}
      height={height ?? "24"}
      viewBox='0 0 24 24'
      fill='none'
      {...props}
    >
      <mask
        id='mask0_1873_128951'
        maskUnits='userSpaceOnUse'
        x='0'
        y='0'
        width='24'
        height='24'
      >
        <rect width='24' height='24' fill={color ?? "#D9D9D9"} />
      </mask>
      <g mask='url(#mask0_1873_128951)'>
        <path
          d='M6.49995 16.0189C7.32817 16.0189 8.13394 16.1128 8.91727 16.3006C9.70061 16.4885 10.4782 16.783 11.25 17.1843V7.35352C10.5474 6.89584 9.78715 6.55257 8.9692 6.32372C8.15125 6.09487 7.32817 5.98044 6.49995 5.98044C5.89995 5.98044 5.33938 6.02755 4.81823 6.12177C4.29708 6.216 3.7615 6.37017 3.2115 6.58427C3.13457 6.60992 3.08008 6.64679 3.04803 6.69487C3.01597 6.74295 2.99995 6.79584 2.99995 6.85352V16.3112C2.99995 16.4009 3.032 16.4667 3.0961 16.5083C3.16022 16.55 3.23074 16.5548 3.30768 16.5227C3.78203 16.3612 4.28266 16.2369 4.80957 16.1497C5.33649 16.0625 5.89995 16.0189 6.49995 16.0189ZM12.7499 17.1843C13.5217 16.783 14.2993 16.4885 15.0826 16.3006C15.866 16.1128 16.6717 16.0189 17.4999 16.0189C18.0999 16.0189 18.6634 16.0625 19.1903 16.1497C19.7172 16.2369 20.2179 16.3612 20.6922 16.5227C20.7692 16.5548 20.8397 16.55 20.9038 16.5083C20.9679 16.4667 21 16.4009 21 16.3112V6.85352C21 6.79584 20.9839 6.74455 20.9519 6.69967C20.9198 6.65479 20.8653 6.61632 20.7884 6.58427C20.2384 6.37017 19.7028 6.216 19.1817 6.12177C18.6605 6.02755 18.0999 5.98044 17.4999 5.98044C16.6717 5.98044 15.8486 6.09487 15.0307 6.32372C14.2127 6.55257 13.4525 6.89584 12.7499 7.35352V17.1843ZM11.9999 19.3842C11.1935 18.7894 10.3237 18.3298 9.39032 18.0054C8.45699 17.681 7.49353 17.5189 6.49995 17.5189C5.8897 17.5189 5.29035 17.5865 4.7019 17.7217C4.11343 17.857 3.54613 18.056 2.99998 18.3188C2.64358 18.4829 2.30447 18.457 1.98267 18.241C1.66089 18.0249 1.5 17.7188 1.5 17.3227V6.46507C1.5 6.24969 1.55544 6.04744 1.66633 5.85834C1.77723 5.66924 1.93717 5.53303 2.14615 5.44969C2.82307 5.12021 3.52851 4.8763 4.26248 4.71797C4.99644 4.55964 5.74227 4.48047 6.49995 4.48047C7.47303 4.48047 8.42368 4.61349 9.35188 4.87952C10.2801 5.14554 11.1628 5.53816 11.9999 6.05739C12.8371 5.53816 13.7198 5.14554 14.648 4.87952C15.5762 4.61349 16.5269 4.48047 17.4999 4.48047C18.2576 4.48047 19.0035 4.55964 19.7374 4.71797C20.4714 4.8763 21.1768 5.12021 21.8538 5.44969C22.0627 5.53303 22.2227 5.66924 22.3336 5.85834C22.4445 6.04744 22.4999 6.24969 22.4999 6.46507V17.3227C22.4999 17.7188 22.3326 18.0217 21.998 18.2313C21.6634 18.441 21.3115 18.4637 20.9422 18.2996C20.4025 18.0432 19.8432 17.849 19.2643 17.7169C18.6855 17.5849 18.0974 17.5189 17.4999 17.5189C16.5064 17.5189 15.5429 17.681 14.6096 18.0054C13.6762 18.3298 12.8064 18.7894 11.9999 19.3842Z'
          fill='#8499B1'
        />
      </g>
    </svg>
  );
};
