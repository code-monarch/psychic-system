# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml
pr: none
trigger: none

pool:
  vmImage: 'ubuntu-20.04'

stages:
  - stage: Build
    displayName: Build stage
    jobs:
      - job: BuildSite
        displayName: Build Site
        pool:
          vmImage: 'ubuntu-20.04'
        steps:
          - task: NodeTool@0
            inputs:
              versionSpec: '10.x'
            displayName: 'Instal Node.js'
          - script: |
              sudo rm -rf node_modules/ build/ && sudo yarn install && sudo yarn build
            displayName: 'yarn install and build'

          - task: CopyFiles@2
            inputs:
              SourceFolder: '$(System.DefaultWorkingDirectory)/build/'
              Contents: |
                $(System.DefaultWorkingDirectory)/build/**/*
              TargetFolder: '$(Build.ArtifactStagingDirectory)/output-site'
            displayName: 'Copy site files to artifact directory'
          - task: AzureCLI@2
            displayName: delete to blob
            inputs:
              azureSubscription: 'Microsoft Azure Sponsorship(c83f83a4-f7a1-4cb7-bab9-36e3b66c26ad)'
              scriptType: 'bash'
              scriptLocation: 'inlineScript'
              inlineScript: 'az storage blob delete-batch --source "\$web" --account-name "etdapqadapaz"'
          - task: AzureCLI@2
            displayName: Deploy to blob
            inputs:
              azureSubscription: 'Microsoft Azure Sponsorship(c83f83a4-f7a1-4cb7-bab9-36e3b66c26ad)'
              scriptType: 'bash'
              scriptLocation: 'inlineScript'
              inlineScript: 'az storage blob upload-batch -d "\$web" --account-name "etdapqadapaz" -s "$(Build.ArtifactStagingDirectory)/output-site/"'

          - task: AzureCLI@2
            #condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
            displayName: Purge CDN Endpoint
            inputs:
              azureSubscription: 'Microsoft-Azure-Sponsorship'
              scriptType: 'bash'
              scriptLocation: 'inlineScript'
              inlineScript: 'az cdn endpoint purge --debug -n dap-qa-cdn-ep  --profile-name dap-qa-cdn-profile --content-paths "/*" --resource-group dap-rg-qa --no-wait --subscription c83f83a4-f7a1-4cb7-bab9-36e3b66c26ad'
