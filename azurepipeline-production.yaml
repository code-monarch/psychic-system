# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml
pr: none
trigger: none
parameters:
  - name: env
    displayName: Environment
    type: string
    default: production
    values:
      - production


variables:
  - name: deployment
    ${{ if eq( parameters['env'], 'production') }}:
      value: "production"

pool:
  vmImage: 'ubuntu-20.04'

stages:
  - stage: Build
    displayName: PROD BUILD & DEPLOY
    jobs:
      - job: BuildSite
        displayName: Build Site
        pool:
          vmImage: 'ubuntu-20.04'
        steps:
          - task: NodeTool@0
            inputs:
              versionSpec: '10.x'
            displayName: 'Instal Node.js'
          - script: |
              sudo rm -rf node_modules/ build/ && sudo yarn install && sudo yarn run ${{variables.deployment}}
            displayName: 'yarn install and build'
          - task: CopyFiles@2
            inputs:
              SourceFolder: '$(System.DefaultWorkingDirectory)/build/'
              Contents: |
                $(System.DefaultWorkingDirectory)/build/**/*
              TargetFolder: '$(Build.ArtifactStagingDirectory)/output-site'
            displayName: 'Copy site files to artifact directory'
  
          - task: Bash@3
            inputs:
              targetType: 'inline'
              script: |
                sudo bash wiregaurd.sh
                sudo cp wiregaurd.conf /etc/wireguard/wiregaurd.conf
                sudo wg-quick up wiregaurd 
                sudo curl ifconfig.me
          - task: AzureCLI@2
            displayName: delete to blob
            inputs:
              azureSubscription: 'et_sp_prod'
              scriptType: 'bash'
              scriptLocation: 'inlineScript'
              inlineScript: 'az storage blob delete-batch --source "\$web" --account-name "etblbdapprodaz"'
          - task: AzureCLI@2
            displayName: Deploy to blob
            inputs:
              azureSubscription: 'et_sp_prod'
              scriptType: 'bash'
              scriptLocation: 'inlineScript'
              inlineScript: 'az storage blob upload-batch -d "\$web" --account-name "etblbdapprodaz" -s "$(Build.ArtifactStagingDirectory)/output-site/"'
          - task: AzureCLI@2
            displayName: Purge CDN Endpoint
            inputs:
              azureSubscription: 'et_sp_prod'
              scriptType: 'bash'
              scriptLocation: 'inlineScript'
              inlineScript: 'az cdn endpoint purge --debug -n etblbdapprodaz-endpoint  --profile-name et-cdn-dap-dev-az-eastus-001 --content-paths "/*" --resource-group et-rg-sbx-prod-az-eastus --no-wait --subscription 2da721a5-2560-4359-a25c-feaf32eaac5f'
          - task: Bash@3
            inputs:
              targetType: 'inline'
              script: |
                sudo wg-quick down wiregaurd 
                sudo curl ifconfig.me